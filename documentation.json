{
    "pipes": [],
    "interfaces": [
        {
            "name": "Todo",
            "id": "interface-Todo-df94fb9ffba9189cc6df8506ed54b7c85cf04ce77d9fda9f2c8e17b4f3c1198a5e9aa3f3ad029bbec1f83bfb8879960e8721a4f50f7a3fbdc8b041c3a987cede",
            "file": "src/app/store/todos/todo.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ID } from '@datorama/akita';\n\nexport interface Todo {\n  id: ID;\n  title: string;\n  completed: boolean;\n}\n\nexport function createTodo({ id, title }: Partial<Todo>) {\n  return {\n    id,\n    title,\n    completed: false\n  } as Todo;\n}\n\nexport enum VISIBILITY_FILTER {\n  SHOW_COMPLETED = 'SHOW_COMPLETED',\n  SHOW_ACTIVE = 'SHOW_ACTIVE',\n  SHOW_ALL = 'SHOW_ALL'\n}\n\nexport type TodoFilter = {\n  label: string;\n  value: VISIBILITY_FILTER;\n};\n\nexport const initialFilters: TodoFilter[] = [\n  { label: 'All', value: VISIBILITY_FILTER.SHOW_ALL },\n  { label: 'Completed', value: VISIBILITY_FILTER.SHOW_COMPLETED },\n  { label: 'Active', value: VISIBILITY_FILTER.SHOW_ACTIVE }\n];\n",
            "properties": [
                {
                    "name": "completed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ID",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TodosState",
            "id": "interface-TodosState-ea9144ada14d60704a6f84b98e3d2095b1d0a3e9618fdff977bb19d3db01ec20bbb47fe18a16fc76fc51e51e7ee36a19f0fbb883e98395cc284638c7dd79ed1d",
            "file": "src/app/store/todos/todos.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport {Todo, VISIBILITY_FILTER} from './todo.model';\n\nexport interface TodosState extends EntityState<Todo> {\n  ui: {\n    filter: VISIBILITY_FILTER\n  };\n}\n\nconst initialState = {\n  ui: {filter: VISIBILITY_FILTER.SHOW_ALL}\n};\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({\n  name: 'todos'\n})\nexport class TodosStore extends EntityStore<TodosState> {\n\n  constructor() {\n    super(initialState);\n  }\n\n}\n",
            "properties": [
                {
                    "name": "ui",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "EntityState"
        }
    ],
    "injectables": [
        {
            "name": "TodosQuery",
            "id": "injectable-TodosQuery-3d3560e46e8f797c8b42fc764756c9bf72c226c26be910412cc479ed2826fc7e080111db0ebe67c4d42ed87247605dcf82ef0bb7588274bf2bbcc91068a1ce93",
            "file": "src/app/store/todos/todos.query.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { TodosStore, TodosState } from './todos.store';\nimport {Todo} from \"./todo.model\";\n\n@Injectable({ providedIn: 'root' })\nexport class TodosQuery extends QueryEntity<TodosState, Todo> {\n\n  constructor(protected override store: TodosStore) {\n    super(store);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "TodosStore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "TodosStore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "QueryEntity",
            "type": "injectable"
        },
        {
            "name": "TodosService",
            "id": "injectable-TodosService-b29cfbfbde99a20dfdf1943b72f29ae9fd8ddf9c709a114a0e52c9e954e4801d68b563285dba2971f91d3cc36d6b12db527e5f0a914044e05179c3bd4d43608b",
            "file": "src/app/store/todos/todos.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "complete",
                    "args": [
                        {
                            "type": "Todo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "Todo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "ID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "ID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Todo[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {tap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\n\nimport {TodosStore} from './todos.store';\nimport {createTodo, Todo} from './todo.model';\nimport {ID} from \"@datorama/akita\";\n\n@Injectable({providedIn: 'root'})\nexport class TodosService {\n\n  constructor(private todosStore: TodosStore) {\n  }\n\n  get(): Observable<Todo[]> {\n    return of<Todo[]>([\n      {\n        id: 1,\n        title: 'test todo',\n        completed: false\n      },\n      {\n        id: 2,\n        title: 'test todo 2',\n        completed: false\n      }\n    ]).pipe(tap(entities => {\n      console.log('get', entities);\n      this.todosStore.set(entities)\n    }));\n  }\n\n  add(title: string): void {\n    const todo = createTodo({ id: Math.random(), title });\n    this.todosStore.add(todo);\n  }\n\n  complete({ id, completed }: Todo): void {\n    this.todosStore.update(id, {\n      completed\n    });\n  }\n\n  delete(id: ID): void {\n    this.todosStore.remove(id);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "todosStore",
                        "type": "TodosStore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "todosStore",
                        "type": "TodosStore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TodosStore",
            "id": "injectable-TodosStore-ea9144ada14d60704a6f84b98e3d2095b1d0a3e9618fdff977bb19d3db01ec20bbb47fe18a16fc76fc51e51e7ee36a19f0fbb883e98395cc284638c7dd79ed1d",
            "file": "src/app/store/todos/todos.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport {Todo, VISIBILITY_FILTER} from './todo.model';\n\nexport interface TodosState extends EntityState<Todo> {\n  ui: {\n    filter: VISIBILITY_FILTER\n  };\n}\n\nconst initialState = {\n  ui: {filter: VISIBILITY_FILTER.SHOW_ALL}\n};\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({\n  name: 'todos'\n})\nexport class TodosStore extends EntityStore<TodosState> {\n\n  constructor() {\n    super(initialState);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": "EntityStore",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e5249ba780d57b977a6281f6346c96d11c71c8cd4136d6cd2a9ee35a8b5925614a18882ee348d38abcd77d2699fae6b36e6c7ddacf17f3199bc5f7d06d7db49a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Todo list'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {TodosService} from './store/todos';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Todo list';\r\n\r\n  constructor(\r\n    private todosService: TodosService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.todosService.get().subscribe();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "todosService",
                        "type": "TodosService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "todosService",
                        "type": "TodosService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div nz-row nzJustify=\"center\">\n  <h1 nz-typography>Todo list</h1>\n</div>\n<div nz-row nzJustify=\"center\">\n  <app-todos-page></app-todos-page>\n</div>\n\n"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-4824ed998272834f70a0fbc29ef69c49ae394f15dcb0ba6b10df62c914854ce1805e66370eecca6d0b834eff26ce75b61efd5228970f279a575026eb31fcd79b",
            "file": "src/app/components/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "addTodo",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "input",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n\n  @Output()\n  addTodo = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  add(input: HTMLInputElement): void {\n    this.addTodo.emit(input.value);\n    input.value = '';\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".todo-form {\r\n  width: 300px;\r\n  margin-bottom: 25px;\r\n}\r\n",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"todo-form\">\n  <nz-input-group nzSearch [nzAddOnAfter]=\"suffixIconButton\">\n    <input\n      #input\n      nz-input\n      type=\"text\"\n      placeholder=\"Add Todo...\"\n      (keydown.enter)=\"add(input)\"/>\n  </nz-input-group>\n  <ng-template #suffixIconButton>\n    <button\n      nz-button\n      nzType=\"primary\"\n      (click)=\"add(input)\"\n    >\n      <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\n    </button>\n  </ng-template>\n</div>\n\n"
        },
        {
            "name": "TodoItemComponent",
            "id": "component-TodoItemComponent-69e1c02bc663f9cb8856da4c5eac14301c886d8bc35b28f0f850d2ce0eb66dba98b3696276eb33bd45f12b9cd30c21a5034d407e8c915fa4defc6a1bc3895f76",
            "file": "src/app/components/todo-item/todo-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todo-item",
            "styleUrls": [
                "./todo-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todo-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "todo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Todo",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "complete",
                    "defaultValue": "new EventEmitter<Todo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "delete",
                    "defaultValue": "new EventEmitter<ID>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleComplete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ID} from '@datorama/akita';\n\nimport {Todo} from '../../store/todos';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss']\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input()\n  todo!: Todo;\n\n  @Output()\n  complete = new EventEmitter<Todo>();\n\n  @Output()\n  delete = new EventEmitter<ID>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  handleComplete(): void {\n    this.complete.emit({...this.todo, completed: !this.todo.completed});\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".todo-item {\r\n  width: 300px;\r\n\r\n  &__title {\r\n    cursor: pointer;\r\n\r\n    &.completed {\r\n      text-decoration: line-through;\r\n    }\r\n  }\r\n\r\n  ::ng-deep {\r\n    .anticon-delete {\r\n      cursor: pointer\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./todo-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nz-card class=\"todo-item\">\n  <div nz-row>\n    <div\n      nz-col\n      class=\"todo-item__title\"\n      [class.completed]=\"todo.completed\"\n      [nzSpan]=\"22\"\n      (click)=\"handleComplete()\"\n    >\n      <span>{{todo.title}}</span>\n    </div>\n    <div nz-col [nzSpan]=\"2\">\n      <i nz-icon nzType=\"delete\" nzTheme=\"outline\" (click)=\"delete.emit(todo.id)\"></i>\n    </div>\n  </div>\n</nz-card>\n"
        },
        {
            "name": "TodosPageComponent",
            "id": "component-TodosPageComponent-56cdd10ae3530562fbd696bc7d24f01a33ec087540b2a3595404fd4a954b69d3a5da950274ea9206aabc35f4d64e67b451944316148a63db2962625e33446ca2",
            "file": "src/app/components/todos-page/todos-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-todos-page",
            "styleUrls": [
                "./todos-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./todos-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "todos$",
                    "defaultValue": "this.todosQuery.selectAll()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Todo[]>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "complete",
                    "args": [
                        {
                            "name": "todo",
                            "type": "Todo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "todo",
                            "type": "Todo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "ID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "ID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {Todo, TodosQuery, TodosService} from '../../store/todos';\nimport {ID} from \"@datorama/akita\";\n\n@Component({\n  selector: 'app-todos-page',\n  templateUrl: './todos-page.component.html',\n  styleUrls: ['./todos-page.component.scss']\n})\nexport class TodosPageComponent implements OnInit {\n\n  public todos$: Observable<Todo[]> = this.todosQuery.selectAll();\n\n  constructor(\n    private todosQuery: TodosQuery,\n    private todosService: TodosService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  add(title: string): void {\n    this.todosService.add(title);\n  }\n\n  complete(todo: Todo): void {\n    this.todosService.complete(todo);\n  }\n\n  delete(id: ID): void {\n    this.todosService.delete(id);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./todos-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "todosQuery",
                        "type": "TodosQuery",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "todosService",
                        "type": "TodosService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "todosQuery",
                        "type": "TodosQuery",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "todosService",
                        "type": "TodosService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"todos-page\">\n  <app-form\n    (addTodo)=\"add($event)\"\n  ></app-form>\n  <div *ngIf=\"todos$ | async as todos; else notItems\" class=\"todos-page__list\">\n    <app-todo-item\n      *ngFor=\"let todo of todos\"\n      [todo]=\"todo\"\n      (complete)=\"complete($event)\"\n      (delete)=\"delete($event)\"\n    ></app-todo-item>\n  </div>\n  <ng-template #notItems>\n    <h4 nz-typography>No elements</h4>\n  </ng-template>\n</div>\n\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-f674db55e8fdbd20d9392a698856af9c08c6fbe8e7bfa861f703a298eb2430a27fa69feb046f934f6824ab10472daca23322bf91513c958d41d4bcfe6807f3c3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { environment } from '../environments/environment';\nimport { TodosPageComponent } from './components/todos-page/todos-page.component';\nimport { FormComponent } from './components/form/form.component';\nimport { TodoItemComponent } from './components/todo-item/todo-item.component';\nimport {NzModule} from \"./nz.module\";\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosPageComponent,\n    FormComponent,\n    TodoItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    environment.production ? [] : AkitaNgDevtools.forRoot(),\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NzModule\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "TodoItemComponent"
                        },
                        {
                            "name": "TodosPageComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "NzModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NzModule",
            "id": "module-NzModule-4a53f476cc6aeedf9df4027cd626f4b1ca30d1d84a2450626302ac9807797bca4e9b31d262f69e5f2c505666bce04acd35dc3e72eb8bb2c62f7ea640dace138c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/nz.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport {NzGridModule} from \"ng-zorro-antd/grid\";\nimport {NzTypographyModule} from \"ng-zorro-antd/typography\";\nimport {NzCardModule} from \"ng-zorro-antd/card\";\nimport {NzIconModule} from \"ng-zorro-antd/icon\";\nimport {NzInputModule} from \"ng-zorro-antd/input\";\nimport {NzButtonModule} from \"ng-zorro-antd/button\";\n\n@NgModule({\n  imports: [\n    NzGridModule,\n    NzTypographyModule,\n    NzCardModule,\n    NzIconModule,\n    NzInputModule,\n    NzButtonModule\n  ],\n  exports: [\n    NzGridModule,\n    NzTypographyModule,\n    NzCardModule,\n    NzIconModule,\n    NzInputModule,\n    NzButtonModule\n  ],\n})\nexport class NzModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Completed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/TodoItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/TodoItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "initialFilters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/todos/todo.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TodoFilter[]",
                "defaultValue": "[\n  { label: 'All', value: VISIBILITY_FILTER.SHOW_ALL },\n  { label: 'Completed', value: VISIBILITY_FILTER.SHOW_COMPLETED },\n  { label: 'Active', value: VISIBILITY_FILTER.SHOW_ACTIVE }\n]"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/todos/todos.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  ui: {filter: VISIBILITY_FILTER.SHOW_ALL}\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/TodoItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TodoItemComponent>",
                "defaultValue": "(args: TodoItemComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "todo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/TodoItem.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  id: 1,\r\n  completed: false,\r\n  title: 'Test todo'\r\n}"
            }
        ],
        "functions": [
            {
                "name": "createTodo",
                "file": "src/app/store/todos/todo.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "id",
                        "type": "Partial<Todo>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                        "destructuredParameter": true
                    },
                    {
                        "name": "title",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "Partial<Todo>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "TodoFilter",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/store/todos/todo.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [
            {
                "name": "VISIBILITY_FILTER",
                "childs": [
                    {
                        "name": "SHOW_COMPLETED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHOW_COMPLETED"
                    },
                    {
                        "name": "SHOW_ACTIVE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHOW_ACTIVE"
                    },
                    {
                        "name": "SHOW_ALL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHOW_ALL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/store/todos/todo.model.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/TodoItem.stories.ts": [
                {
                    "name": "Completed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/TodoItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/TodoItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/TodoItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TodoItemComponent>",
                    "defaultValue": "(args: TodoItemComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "todo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/TodoItem.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  id: 1,\r\n  completed: false,\r\n  title: 'Test todo'\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/store/todos/todo.model.ts": [
                {
                    "name": "initialFilters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/todos/todo.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TodoFilter[]",
                    "defaultValue": "[\n  { label: 'All', value: VISIBILITY_FILTER.SHOW_ALL },\n  { label: 'Completed', value: VISIBILITY_FILTER.SHOW_COMPLETED },\n  { label: 'Active', value: VISIBILITY_FILTER.SHOW_ACTIVE }\n]"
                }
            ],
            "src/app/store/todos/todos.store.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/todos/todos.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  ui: {filter: VISIBILITY_FILTER.SHOW_ALL}\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/store/todos/todo.model.ts": [
                {
                    "name": "createTodo",
                    "file": "src/app/store/todos/todo.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "id",
                            "type": "Partial<Todo>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                            "destructuredParameter": true
                        },
                        {
                            "name": "title",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "Partial<Todo>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "5a92e6c9-23cb-4ec4-b67a-ae5847a48770",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/store/todos/todo.model.ts": [
                {
                    "name": "VISIBILITY_FILTER",
                    "childs": [
                        {
                            "name": "SHOW_COMPLETED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHOW_COMPLETED"
                        },
                        {
                            "name": "SHOW_ACTIVE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHOW_ACTIVE"
                        },
                        {
                            "name": "SHOW_ALL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHOW_ALL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/store/todos/todo.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/store/todos/todo.model.ts": [
                {
                    "name": "TodoFilter",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/store/todos/todo.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/todo-item/todo-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodoItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/todos-page/todos-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodosPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todo.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Todo",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todo.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createTodo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todo.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialFilters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todos.query.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TodosQuery",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todos.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TodosService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todos.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TodosStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todos.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TodosState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/todos/todos.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/TodoItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Completed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/TodoItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/TodoItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/TodoItem.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "todo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}